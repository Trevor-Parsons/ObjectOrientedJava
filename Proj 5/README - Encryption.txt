Encryption.java is a program that will take a text file name input from the user and then convert the file into an array of bytes. The bytes in the array are then offset by an amount specified by the user and the contents of the byte array are written to a new file. The new file has the same name as the one provided by the user, but contains a ".encrypted" tag.

Decryption.java is a program that takes a text file that was encrypted using the Encryption.java program. If the user knows the key that was used to encrypt the file, then they can enter it into Decryption.java and read the unencrypted contents of the file. Decrytption.java works similarly to the above program. It stores the contents of an encrypted file in a byte array, removes the offset made by the Encryption program, and then writes the contents of the byte array to a new text file.

For the extra credit part of the assignment, I used the same process of reading a file into a byte array as the encryption and decryption program used. Since the encryption key is not known, the program has to try every possible byte offset (from -128 to 127), write the byte array to a file, and then check if the file has been decrypted. I picked 10 commonly used words and checked the possibly decrypted files for these words. If a common word was found, then the program saves the byte array with the desired offset to a new text file with a ".decryptedx" extension (x corresponds to the number of possible keys that have been found to that point). This allows the user to see all of the possibly decrypted files and determine which, if any, of them use the correct key.
